{
  "swagger": "2.0",
  "info": {
    "title": "Simulator API",
    "description": "This API allows simulators to provide states and receive commands from the platform.",
    "version": "v1"
  },
  "paths": {
    "/v2/workspaces/{workspaceName}/simulatorSessions": {
      "get": {
        "tags": [
          "SimulatorSession"
        ],
        "summary": "Implementaton of the GET /v2/.../simulatorSessions endpoint.",
        "description": "Retrieves all of the simulators currently registered with all\r\nsimulator gateways within this workspace.\r\n            \r\nThe deployment_mode appears in the query string. It can be one of\r\nUnspecified, Testing, or Hosted. If it has a 'neq:' prefix, that means \"not;\"\r\ne.g., {.../simulatorSessions?deployment_mode=neq:Hosted} means the response should not include\r\nsimulators that are hosted.\r\n            \r\nThe session_status can be one of Attachable, Attached, Detaching, Rejected,\r\nand supports the neq: prefix.\r\n            \r\nThe collection appears in the query string\r\n            \r\nThe package appears in the query string\r\n            \r\nThe filter queries can appear together, like\r\n{.../simulatorSessions?deployment_mode=Hosted&collection=1234-455-33333}",
        "operationId": "Session_List",
        "produces": [
          "application/json",
          "text/plain",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceName",
            "description": "The workspace identifier.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "deployment_mode",
            "description": "A specifier to filter on deployment mode",
            "type": "string"
          },
          {
            "in": "query",
            "name": "session_status",
            "description": "A specifier to filter on session status",
            "type": "string"
          },
          {
            "in": "query",
            "name": "collection",
            "description": "If present, only sessions in this collection",
            "type": "string"
          },
          {
            "in": "query",
            "name": "package",
            "description": "If present, only sessions in this package",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SimulatorSessionSummary"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            },
            "x-ms-error-response": true
          }
        }
      },
      "post": {
        "tags": [
          "SimulatorSession"
        ],
        "summary": "Implementation of the POST /v2/.../simulatorSessions endpoint.",
        "description": "Registers a simulator with the simulator gateway.",
        "operationId": "Session_Create",
        "consumes": [
          "application/json",
          "application/json-patch+json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceName",
            "description": "The workspace identifier.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Information and capabilities about the simulator.",
            "schema": {
              "$ref": "#/definitions/SimulatorInterface"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SimulatorSessionResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            },
            "x-ms-error-response": true
          }
        }
      }
    },
    "/v2/workspaces/{workspaceName}/simulatorSessions/{sessionId}": {
      "get": {
        "tags": [
          "SimulatorSession"
        ],
        "summary": "Implementation of the GET /v2/.../simulatorSessions/{sessionId} endpoint.",
        "description": "Retrieves a simulator session corresponding to the sessionId",
        "operationId": "Session_Get",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceName",
            "description": "The workspace identifier.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "sessionId",
            "description": "The sessionId of the simulator session to fetch",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SimulatorSessionResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            },
            "x-ms-error-response": true
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            },
            "x-ms-error-response": true
          }
        }
      },
      "delete": {
        "tags": [
          "SimulatorSession"
        ],
        "summary": "Implementation of the DELETE /v2/.../simulators endpoint.",
        "description": "Unregisters the simulator with the simulator gateway.",
        "operationId": "Session_Delete",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceName",
            "description": "The workspace identifier.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "sessionId",
            "description": "The session ID generated during registration",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            },
            "x-ms-error-response": true
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            },
            "x-ms-error-response": true
          }
        }
      }
    },
    "/v2/workspaces/{workspaceName}/simulatorSessions/{sessionId}/action": {
      "get": {
        "tags": [
          "SimulatorSession"
        ],
        "summary": "Implementation of the GET /v2/.../simulatorSessions/{sessionId}/action endpoint.",
        "description": "Gets the most recent action sent to the simulator to process.",
        "operationId": "Session_GetMostRecentAction",
        "produces": [
          "application/json",
          "text/plain",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceName",
            "description": "The workspace identifier.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "sessionId",
            "description": "Unique identification of the simulator.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            },
            "x-ms-error-response": true
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            },
            "x-ms-error-response": true
          }
        }
      }
    },
    "/v2/workspaces/{workspaceName}/simulatorSessions/{sessionId}/advance": {
      "post": {
        "tags": [
          "SimulatorSession"
        ],
        "summary": "Implementation of the POST /v2/.../simulatorSessions/{sessionId}/advance\r\nendpoint.",
        "operationId": "Session_Advance",
        "consumes": [
          "application/json",
          "application/json-patch+json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json",
          "text/plain",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceName",
            "description": "The workspace identifier.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "sessionId",
            "description": "Unique identifier for the simulator.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The new state of the simulator.",
            "schema": {
              "$ref": "#/definitions/SimulatorState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            },
            "x-ms-error-response": true
          }
        }
      }
    }
  },
  "definitions": {
    "SimulatorSession+Types+Status": {
      "enum": [
        "Deregistered",
        "Attachable",
        "Attached",
        "Detaching",
        "Rejected"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "SimulatorSession+Types+Status"
      }
    },
    "SimulatorContext+Types+DeploymentMode": {
      "enum": [
        "Unspecified",
        "Hosted",
        "Testing"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "SimulatorContext+Types+DeploymentMode"
      }
    },
    "Purpose+Types+Action": {
      "enum": [
        "Inactive",
        "Debug",
        "Train",
        "Assess"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "Purpose+Types+Action"
      }
    },
    "PurposeTarget": {
      "type": "object",
      "properties": {
        "workspaceName": {
          "type": "string"
        },
        "brainName": {
          "type": "string"
        },
        "brainVersion": {
          "format": "int32",
          "type": "integer"
        },
        "conceptName": {
          "type": "string"
        }
      }
    },
    "Purpose": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/Purpose+Types+Action"
        },
        "target": {
          "$ref": "#/definitions/PurposeTarget"
        }
      }
    },
    "SimulatorContext": {
      "type": "object",
      "properties": {
        "deploymentMode": {
          "$ref": "#/definitions/SimulatorContext+Types+DeploymentMode"
        },
        "deploymentDetails": {
          "type": "string"
        },
        "simulatorClientId": {
          "type": "string"
        },
        "collection": {
          "type": "string"
        },
        "package": {
          "type": "string"
        },
        "purpose": {
          "$ref": "#/definitions/Purpose"
        }
      }
    },
    "SimulatorSessionSummary": {
      "type": "object",
      "properties": {
        "sessionId": {
          "type": "string"
        },
        "sessionStatus": {
          "$ref": "#/definitions/SimulatorSession+Types+Status"
        },
        "simulatorName": {
          "type": "string"
        },
        "simulatorContext": {
          "$ref": "#/definitions/SimulatorContext"
        }
      }
    },
    "ProblemDetails": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "extensions": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true
        }
      }
    },
    "SimulatorInterface": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "timeout": {
          "format": "float",
          "type": "number"
        },
        "capabilities": {
          "format": "object",
          "type": "object"
        },
        "simulatorContext": {
          "type": "string"
        },
        "description": {
          "format": "object",
          "type": "object"
        }
      }
    },
    "SimulatorSessionMilestone": {
      "description": "SimulatorSession progress milestone.",
      "type": "object",
      "properties": {
        "firstTime": {
          "format": "date-time",
          "description": "First time, this session made the specified progress.",
          "type": "string"
        }
      }
    },
    "SimulatorSessionProgress": {
      "description": "SimulatorSession progress related to train an actual brain.",
      "type": "object",
      "properties": {
        "attached": {
          "$ref": "#/definitions/SimulatorSessionMilestone"
        },
        "iterated": {
          "$ref": "#/definitions/SimulatorSessionMilestone"
        }
      }
    },
    "SimulatorSessionResponse": {
      "description": "SimulatorSession model, having details of one active simulator session.",
      "required": [
        "lastSeenTime",
        "registrationTime",
        "sessionId"
      ],
      "type": "object",
      "properties": {
        "sessionId": {
          "description": "Unique sessionId for this session.",
          "type": "string"
        },
        "sessionStatus": {
          "$ref": "#/definitions/SimulatorSession+Types+Status"
        },
        "sessionProgress": {
          "$ref": "#/definitions/SimulatorSessionProgress"
        },
        "interface": {
          "$ref": "#/definitions/SimulatorInterface"
        },
        "simulatorContext": {
          "$ref": "#/definitions/SimulatorContext"
        },
        "registrationTime": {
          "format": "date-time",
          "description": "Time, when this session was registered with Bonsai platform.",
          "type": "string"
        },
        "lastSeenTime": {
          "format": "date-time",
          "description": "Last time, when any request for this session was seen.",
          "type": "string"
        },
        "iterationRate": {
          "format": "double",
          "description": "Current IterationRate, 1 state-action loop is roughly maps to 1 iteration.",
          "type": "number"
        },
        "details": {
          "description": "Additional Details for this session provided by bonsai platform.",
          "type": "string"
        }
      }
    },
    "Event+Types+EventType": {
      "enum": [
        "Unspecified",
        "EpisodeStart",
        "EpisodeStep",
        "EpisodeFinish",
        "PlaybackStart",
        "PlaybackStep",
        "PlaybackFinish",
        "Idle",
        "Registered",
        "Unregister"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "Event+Types+EventType"
      }
    },
    "EpisodeStart": {
      "type": "object",
      "properties": {
        "config": {
          "format": "object",
          "type": "object"
        }
      }
    },
    "Step": {
      "type": "object",
      "properties": {
        "action": {
          "format": "object",
          "type": "object"
        }
      }
    },
    "EpisodeFinish+Types+Reason": {
      "enum": [
        "Invalid",
        "Unspecified",
        "LessonChanged",
        "Terminal",
        "Interrupted"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "EpisodeFinish+Types+Reason"
      }
    },
    "EpisodeFinish": {
      "type": "object",
      "properties": {
        "reason": {
          "$ref": "#/definitions/EpisodeFinish+Types+Reason"
        }
      }
    },
    "PlaybackStart": {
      "type": "object"
    },
    "PlaybackStep": {
      "type": "object"
    },
    "PlaybackFinish": {
      "type": "object"
    },
    "Idle": {
      "type": "object",
      "properties": {
        "callbackTime": {
          "format": "float",
          "type": "number"
        }
      }
    },
    "Registered": {
      "type": "object"
    },
    "Unregister+Types+Reason": {
      "enum": [
        "Unspecified",
        "Finished",
        "Error",
        "NotFound"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "Unregister+Types+Reason"
      }
    },
    "Unregister": {
      "type": "object",
      "properties": {
        "reason": {
          "$ref": "#/definitions/Unregister+Types+Reason"
        },
        "details": {
          "type": "string"
        }
      }
    },
    "Event+KindOneofCase": {
      "enum": [
        "None",
        "EpisodeStart",
        "EpisodeStep",
        "EpisodeFinish",
        "PlaybackStart",
        "PlaybackStep",
        "PlaybackFinish",
        "Idle",
        "Registered",
        "Unregister"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "Event+KindOneofCase"
      }
    },
    "Event": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/Event+Types+EventType"
        },
        "sessionId": {
          "type": "string"
        },
        "sequenceId": {
          "format": "int32",
          "type": "integer"
        },
        "episodeStart": {
          "$ref": "#/definitions/EpisodeStart"
        },
        "episodeStep": {
          "$ref": "#/definitions/Step"
        },
        "episodeFinish": {
          "$ref": "#/definitions/EpisodeFinish"
        },
        "playbackStart": {
          "$ref": "#/definitions/PlaybackStart"
        },
        "playbackStep": {
          "$ref": "#/definitions/PlaybackStep"
        },
        "playbackFinish": {
          "$ref": "#/definitions/PlaybackFinish"
        },
        "idle": {
          "$ref": "#/definitions/Idle"
        },
        "registered": {
          "$ref": "#/definitions/Registered"
        },
        "unregister": {
          "$ref": "#/definitions/Unregister"
        },
        "kindCase": {
          "$ref": "#/definitions/Event+KindOneofCase"
        }
      }
    },
    "SimulatorState": {
      "type": "object",
      "properties": {
        "sessionId": {
          "type": "string"
        },
        "sequenceId": {
          "format": "int32",
          "type": "integer"
        },
        "state": {
          "format": "object",
          "type": "object"
        },
        "halted": {
          "type": "boolean"
        },
        "error": {
          "type": "string"
        }
      }
    }
  }
}