// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Bonsai.SimulatorApi.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class EventModel
    {
        /// <summary>
        /// Initializes a new instance of the EventModel class.
        /// </summary>
        public EventModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EventModel class.
        /// </summary>
        /// <param name="type">Possible values include: 'Unspecified',
        /// 'EpisodeStart', 'EpisodeStep', 'EpisodeFinish', 'PlaybackStart',
        /// 'PlaybackStep', 'PlaybackFinish', 'Idle', 'Registered',
        /// 'Unregister'</param>
        /// <param name="kindCase">Possible values include: 'None',
        /// 'EpisodeStart', 'EpisodeStep', 'EpisodeFinish', 'PlaybackStart',
        /// 'PlaybackStep', 'PlaybackFinish', 'Idle', 'Registered',
        /// 'Unregister'</param>
        public EventModel(EventTypesEventType? type = default(EventTypesEventType?), string sessionId = default(string), int? sequenceId = default(int?), EpisodeStart episodeStart = default(EpisodeStart), Step episodeStep = default(Step), EpisodeFinish episodeFinish = default(EpisodeFinish), object playbackStart = default(object), object playbackStep = default(object), object playbackFinish = default(object), Idle idle = default(Idle), object registered = default(object), Unregister unregister = default(Unregister), EventKindOneofCase? kindCase = default(EventKindOneofCase?))
        {
            Type = type;
            SessionId = sessionId;
            SequenceId = sequenceId;
            EpisodeStart = episodeStart;
            EpisodeStep = episodeStep;
            EpisodeFinish = episodeFinish;
            PlaybackStart = playbackStart;
            PlaybackStep = playbackStep;
            PlaybackFinish = playbackFinish;
            Idle = idle;
            Registered = registered;
            Unregister = unregister;
            KindCase = kindCase;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'Unspecified',
        /// 'EpisodeStart', 'EpisodeStep', 'EpisodeFinish', 'PlaybackStart',
        /// 'PlaybackStep', 'PlaybackFinish', 'Idle', 'Registered',
        /// 'Unregister'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public EventTypesEventType? Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sessionId")]
        public string SessionId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sequenceId")]
        public int? SequenceId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "episodeStart")]
        public EpisodeStart EpisodeStart { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "episodeStep")]
        public Step EpisodeStep { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "episodeFinish")]
        public EpisodeFinish EpisodeFinish { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "playbackStart")]
        public object PlaybackStart { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "playbackStep")]
        public object PlaybackStep { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "playbackFinish")]
        public object PlaybackFinish { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "idle")]
        public Idle Idle { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "registered")]
        public object Registered { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "unregister")]
        public Unregister Unregister { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'None', 'EpisodeStart',
        /// 'EpisodeStep', 'EpisodeFinish', 'PlaybackStart', 'PlaybackStep',
        /// 'PlaybackFinish', 'Idle', 'Registered', 'Unregister'
        /// </summary>
        [JsonProperty(PropertyName = "kindCase")]
        public EventKindOneofCase? KindCase { get; set; }

    }
}
