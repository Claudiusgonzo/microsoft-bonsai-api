// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Bonsai.SimulatorAPI.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Value
    {
        /// <summary>
        /// Initializes a new instance of the Value class.
        /// </summary>
        public Value()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Value class.
        /// </summary>
        public Value(double numberValue, bool boolValue, int kindCase, string stringValue = default(string), IDictionary<string, object> structValue = default(IDictionary<string, object>), ListValue listValue = default(ListValue))
        {
            NumberValue = numberValue;
            StringValue = stringValue;
            BoolValue = boolValue;
            StructValue = structValue;
            ListValue = listValue;
            KindCase = kindCase;
            CustomInit();
        }
        /// <summary>
        /// Static constructor for Value class.
        /// </summary>
        static Value()
        {
            NullValue = 0;
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "numberValue")]
        public double NumberValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "stringValue")]
        public string StringValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "boolValue")]
        public bool BoolValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "structValue")]
        public IDictionary<string, object> StructValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "listValue")]
        public ListValue ListValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "kindCase")]
        public int KindCase { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "nullValue")]
        public static int NullValue { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
