// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Bonsai.SimulatorAPI.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class SimulatorInterface
    {
        /// <summary>
        /// Initializes a new instance of the SimulatorInterface class.
        /// </summary>
        public SimulatorInterface()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SimulatorInterface class.
        /// </summary>
        public SimulatorInterface(double timeout, string name = default(string), IDictionary<string, object> capabilities = default(IDictionary<string, object>), string simulatorContext = default(string), IDictionary<string, object> description = default(IDictionary<string, object>))
        {
            Name = name;
            Timeout = timeout;
            Capabilities = capabilities;
            SimulatorContext = simulatorContext;
            Description = description;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "timeout")]
        public double Timeout { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "capabilities")]
        public IDictionary<string, object> Capabilities { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "simulatorContext")]
        public string SimulatorContext { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public IDictionary<string, object> Description { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
