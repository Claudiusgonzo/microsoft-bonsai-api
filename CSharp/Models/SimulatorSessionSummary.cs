// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Bonsai.SimulatorAPI.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class SimulatorSessionSummary
    {
        /// <summary>
        /// Initializes a new instance of the SimulatorSessionSummary class.
        /// </summary>
        public SimulatorSessionSummary()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SimulatorSessionSummary class.
        /// </summary>
        public SimulatorSessionSummary(int sessionStatus, string sessionId = default(string), string simulatorName = default(string), SimulatorContext simulatorContext = default(SimulatorContext))
        {
            SessionId = sessionId;
            SessionStatus = sessionStatus;
            SimulatorName = simulatorName;
            SimulatorContext = simulatorContext;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sessionId")]
        public string SessionId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sessionStatus")]
        public int SessionStatus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "simulatorName")]
        public string SimulatorName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "simulatorContext")]
        public SimulatorContext SimulatorContext { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (SimulatorContext != null)
            {
                SimulatorContext.Validate();
            }
        }
    }
}
