// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Bonsai.SimulatorAPI
{
    using Models;
    using System.IO;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for SimulatorNotification.
    /// </summary>
    public static partial class SimulatorNotificationExtensions
    {
            /// <summary>
            /// http post/negotiate endpoint to broker connection to Azure SignalR Service
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='workspaceName'>
            /// workspace information for subscription grain
            /// </param>
            /// <param name='sessionId'>
            /// simulator identifier
            /// </param>
            /// <param name='user'>
            /// unique user session identifier. SignalR clients send this as user, but this
            /// is internally used as user session id
            /// </param>
            public static Stream Index(this ISimulatorNotification operations, string workspaceName, string sessionId, string user = default(string))
            {
                return operations.IndexAsync(workspaceName, sessionId, user).GetAwaiter().GetResult();
            }

            /// <summary>
            /// http post/negotiate endpoint to broker connection to Azure SignalR Service
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='workspaceName'>
            /// workspace information for subscription grain
            /// </param>
            /// <param name='sessionId'>
            /// simulator identifier
            /// </param>
            /// <param name='user'>
            /// unique user session identifier. SignalR clients send this as user, but this
            /// is internally used as user session id
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Stream> IndexAsync(this ISimulatorNotification operations, string workspaceName, string sessionId, string user = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                var _result = await operations.IndexWithHttpMessagesAsync(workspaceName, sessionId, user, null, cancellationToken).ConfigureAwait(false);
                _result.Request.Dispose();
                return _result.Body;
            }

    }
}
