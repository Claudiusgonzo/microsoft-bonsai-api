// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Bonsai.SimulatorAPI
{
    using Microsoft.Rest;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.IO;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// SimulatorNotification operations.
    /// </summary>
    public partial interface ISimulatorNotification
    {
        /// <summary>
        /// http post/negotiate endpoint to broker connection to Azure SignalR
        /// Service
        /// </summary>
        /// <param name='workspaceName'>
        /// workspace information for subscription grain
        /// </param>
        /// <param name='sessionId'>
        /// simulator identifier
        /// </param>
        /// <param name='user'>
        /// unique user session identifier. SignalR clients send this as user,
        /// but this is internally used as user session id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<Stream>> IndexWithHttpMessagesAsync(string workspaceName, string sessionId, string user = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
