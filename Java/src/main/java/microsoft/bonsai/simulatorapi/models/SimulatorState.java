/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package microsoft.bonsai.simulatorapi.models;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The SimulatorState model.
 */
public class SimulatorState {
    /**
     * The sessionId property.
     */
    @JsonProperty(value = "sessionId")
    private String sessionId;

    /**
     * The sequenceId property.
     */
    @JsonProperty(value = "sequenceId")
    private Integer sequenceId;

    /**
     * The state property.
     */
    @JsonProperty(value = "state")
    private Object state;

    /**
     * The halted property.
     */
    @JsonProperty(value = "halted")
    private Boolean halted;

    /**
     * The error property.
     */
    @JsonProperty(value = "error")
    private String error;

    /**
     * Get the sessionId value.
     *
     * @return the sessionId value
     */
    public String sessionId() {
        return this.sessionId;
    }

    /**
     * Set the sessionId value.
     *
     * @param sessionId the sessionId value to set
     * @return the SimulatorState object itself.
     */
    public SimulatorState withSessionId(String sessionId) {
        this.sessionId = sessionId;
        return this;
    }

    /**
     * Get the sequenceId value.
     *
     * @return the sequenceId value
     */
    public Integer sequenceId() {
        return this.sequenceId;
    }

    /**
     * Set the sequenceId value.
     *
     * @param sequenceId the sequenceId value to set
     * @return the SimulatorState object itself.
     */
    public SimulatorState withSequenceId(Integer sequenceId) {
        this.sequenceId = sequenceId;
        return this;
    }

    /**
     * Get the state value.
     *
     * @return the state value
     */
    public Object state() {
        return this.state;
    }

    /**
     * Set the state value.
     *
     * @param state the state value to set
     * @return the SimulatorState object itself.
     */
    public SimulatorState withState(Object state) {
        this.state = state;
        return this;
    }

    /**
     * Get the halted value.
     *
     * @return the halted value
     */
    public Boolean halted() {
        return this.halted;
    }

    /**
     * Set the halted value.
     *
     * @param halted the halted value to set
     * @return the SimulatorState object itself.
     */
    public SimulatorState withHalted(Boolean halted) {
        this.halted = halted;
        return this;
    }

    /**
     * Get the error value.
     *
     * @return the error value
     */
    public String error() {
        return this.error;
    }

    /**
     * Set the error value.
     *
     * @param error the error value to set
     * @return the SimulatorState object itself.
     */
    public SimulatorState withError(String error) {
        this.error = error;
        return this;
    }

}
